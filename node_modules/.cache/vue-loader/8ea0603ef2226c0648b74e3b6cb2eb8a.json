{"remainingRequest":"D:\\kawalcorona_vue_material\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\kawalcorona_vue_material\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\kawalcorona_vue_material\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\kawalcorona_vue_material\\src\\views\\Index.vue?vue&type=template&id=23543608&","dependencies":[{"path":"D:\\kawalcorona_vue_material\\src\\views\\Index.vue","mtime":1595035081605},{"path":"D:\\kawalcorona_vue_material\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\kawalcorona_vue_material\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\kawalcorona_vue_material\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\kawalcorona_vue_material\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}